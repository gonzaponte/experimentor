# State transition protocol
# file is evaluated in order, aliases can be used in
# expressions if they refer to a previous attribute already defined
# additional available aliases : state_idx, experiment
# [alias:kind:device_name.attribute]
# There are two kinds of attribute definitions: an iterator and a map
# They recieve different paramaters
# iterator:
# expr : a python expression that evaluates to an iterable of values
#
# map:
# nmax : maximum number of values to use (if more than one expression can evaluate to true simultaneously)
# expression : value
# {some_alias}>10 : {some_other_alias}*3
# {some_alias}<=10 : 5
# 1 : 10
# notice,  the last expression will always evaluates to true,
# so if nmax is larger than 1 this mapping will iterate over the
# two values in the order they appear


[ex_wl:iterator:mono.wavelength]
expr : range(800, 240, -10)

[exposure:iterator:spectro.exposure]
expr : [10]

[mono_grating:map:mono.grating]
{ex_wl} < 400 : 1
{ex_wl} >= 400 : 2

[em_wl:map:spectro.wavelength]
{ex_wl} > 400 : {ex_wl}+100
{ex_wl} < 400 : {ex_wl}+200


[spectro_grating:map:spectro.grating]
{em_wl} < 400  : 1
{em_wl} >= 400 : 2

[short_pass:map:spfw.position]
{ex_wl} < 440                  : 1
{ex_wl} >= 440 and {ex_wl}<490 : 2
{ex_wl} >= 490 and {ex_wl}<540 : 3
{ex_wl} >= 540 and {ex_wl}<590 : 4
{ex_wl} >= 590 and {ex_wl}<640 : 5
{ex_wl} > 640                  : 6

[long_pass:map:lpfw.position]
{ex_wl} >= 350 and {ex_wl}<400 : 1
{ex_wl} >= 400 and {ex_wl}<450 : 2
{ex_wl} >= 450 and {ex_wl}<500 : 3
{ex_wl} >= 500 and {ex_wl}<550 : 4
{ex_wl} >= 550 and {ex_wl}<600 : 5
{ex_wl} < 350 or {ex_wl}>600   : 6

[save_path:map:spectro.save_path]
1 : "raman_calibration_state_{state_idx}_ex_wl_{ex_wl}_exposure_{exposure}s.asc"

[excluded]
# states for which any expression evaluates to True will be skipped
# name : expression